* {
  padding: 0; 
  margin: 0; 
  box-sizing: border-box;
  font-family: Arial, Helvetica, sans-serif; 
}

html {
  font-size: 62.5%; 
}

/* utility flexbox class */ 
.center {
  display: flex; 
  align-items: center;
  justify-content: center; 
}

.container {
  width: 100%; 
  height: 100vh; 
  background-color: rgb(127,86,167);
  border: 1px solid green; 
}

.header {
  width: 40%; 
  height: 100%; 
  border: 1px solid red; 

  /* we get rid of the 2 properties below replace with .center class */ 
  /* display: flex;  */
  /* justify-content: center; */
  align-items: flex-start;
  flex-direction: column;
}

.heading {
  font-size: 4rem;
  font-weight: 200;
  color: #fff; 
  letter-spacing: .1rem;
}

.heading span {
  font-size: 4rem; 
  color: #efd81d; 
  transition: color .2s;
}

.btn {
  width: 15rem; 
  height: 4rem; 
  background-color: #efd81d;
  font-size: 1.4rem; 
  text-transform: uppercase; 
  color: #fff; 
  letter-spacing: .1rem;
  border: none; 
  margin-top: 3.5rem;
  transition: background-color .2s; 
}

/* BOXEX */ 

.boxes {
  width: 40%; 
  height: 100%; 

  border: 1px solid yellow; 
  perspective: 150rem;
}


.active.box {
  /* the box returns to position 0 and 0 of where it normally is which is the middle of the while yellow boxes rectangle cause it was put there by flexbox */ 
  top:0; 
  left:0; 
  transition: all .5s; 
}

.box {
  transform-style: preserve-3d; 
  transform: rotateY(45deg) rotateX(30deg); 
  
  position: relative; 

  display: flex; 
  justify-content: center;
  align-items: center;

  transition: all .5s; 
  cursor: pointer; 

  /* the code below show why the boxes return to center when given active class */ 
  /* width: 30px; 
  height: 30px; 
  background:red; */
}

@keyframes boxAnim {
  0% {
    transform: rotateX(0) rotateY(0) rotateZ(0); 
  }
  100% {
    transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg); 
  }
}

.box-1 {
  left: -25rem; 
  top: -6rem; 
  animation: boxAnim 100s infinite linear;
}

.box-2 {
  left: -11rem; 
  top: -23rem; 
  animation: boxAnim 100s -10s infinite linear;
}

.box-3 {
  left: 10rem; 
  top: -23rem; 
  animation: boxAnim 100s -20s infinite linear;
}

.box-4 {
  left: 25rem; 
  top: -6rem; 
  animation: boxAnim 100s -30s infinite linear;
}

.box-5 {
  left: -22rem; 
  top:  13rem; 
  animation: boxAnim 100s -40s infinite linear;
}

.box-6 {
  left: 0rem; 
  top:  25rem; 
  animation: boxAnim 100s -50s infinite linear;
}

.box-7 {
  left: 21rem; 
  top: 14rem; 
  animation: boxAnim 100s -60s infinite linear;
}

.active.box div {
  width: 16rem; 
  height: 16rem; 
  transition: all .2s .5s ease-in-out; 
}

/* Redefining the code for the active box */ 
.active .top-side {
  transform: rotateX(90deg) translateZ(8rem);  
}

.active .bottom-side {
  transform: rotateX(90deg) translateZ(8rem);  
}

.active .front-side {
  transform: translateZ(8rem);  
  opacity: 1;
}

.active .back-side {
  transform: translateZ(-8rem);  
}

.active .right-side {
  transform: rotateY(-90deg) translateX(8rem); 
  transform-origin: right; 
  opacity: 1; 
}

.active .left-side {
  transform: rotateY(90deg) translateX(-8rem); 
  transform-origin: left;
}

/* */ 


/* boxes are small points, box-divs are the actuall divs constituting walls */ 

.box div {
  width: 7rem; 
  height: 7rem; 
  position: absolute; 

  opacity: .8; 

  box-shadow: .1rem  .1rem .1rem #eee inset,
             -.1rem -.1rem .1rem #eee inset,
              .1rem  .1rem 3.5rem rgba(255, 255, 255, .2), 
             -.1rem -.1rem 3.5rem rgba(255, 255, 255, .2); 
}

/* all the walls within the divs */ 

.box-1 div {
  /* JS */ 
  background: #efd81d;
}

.box-2 div {
  /* React */ 
  background: #61dbfb;
}
.box-3 div {
  /* Vue JS */ 
  background: #41b883;
}
.box-4 div {
  /* Angular */ 
  background: #b52e31;
}
.box-5 div {
  /*  Node */ 
  background: #43853e;
}
.box-6 div {
  /* SASS */ 
  background: #cf649a;
}
.box-7 div {
  /* AMber */ 
  background: #e043a9;
}

.top-side {
  transform: rotateX(90deg) translateZ(3.5rem);  
}

.bottom-side {
  transform: rotateX(90deg) translateZ(-3.5rem);  
}

.front-side {
  transform: translateZ(3.5rem);  
  opacity: 1;
}

.back-side {
  transform: translateZ(-3.5rem);  
}

.right-side {
  transform: rotateY(-90deg) translateX(3.5rem); 
  transform-origin: right; 
  opacity: 1; 
}

.left-side {
  transform: rotateY(90deg) translateX(-3.5rem); 
  transform-origin: left;
}